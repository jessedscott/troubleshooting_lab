---
apiVersion: v1
kind: Namespace
metadata:
  name: matrix-chat
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: conduit-config 
  namespace: matrix-chat 
data:
  SERVER_NAME: "matrix"
  conduit.toml: |
    [global]
    server_name = "matrix"
    database_backend = "rocksdb"
    database_path = "/var/lib/matrix/"
    address = "0.0.0.0"
    port = 6167
    allow_registration = true
    registration_token = "redhat"               
    jwt_secret = "ba39e1cb3c548496cade163b33252788"
    allow_check_for_updates = false
---
apiVersion: v1
kind: Service
metadata:
  name: matrix
  namespace: matrix-chat
  labels:
    app: matrix
spec:
  clusterIP: None
  ports:
  - port: 6167
    targetPort: 6167
    protocol: TCP
  selector:
    app: matrix
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: matrix
  namespace: matrix-chat
spec:
  serviceName: matrix
  replicas: 1
  selector:
    matchLabels:
      app: matrix
  template:
    metadata:
      labels:
        app: matrix
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: conduit
        image: docker.io/matrixconduit/matrix-conduit 
        env:
        - name: CONDUIT_CONFIG
          value: "/etc/config/conduit.toml"
        ports:
        - name: http
          containerPort: 6167
        volumeMounts:
        - name: conduit-config
          mountPath: /etc/config
        - name: matrix-data
          mountPath: /var/lib/matrix
      volumes:
      - name: conduit-config
        configMap:
          name: conduit-config
          items:
          - key: conduit.toml
            path: conduit.toml
  volumeClaimTemplates:
  - metadata:
      name: matrix-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "nfs-storage"
      resources:
        requests:
          storage: 10Gi
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: matrix
  name: matrix
  namespace: matrix-chat
spec:
  host: matrix.apps.ocp4.example.com
  tls:
    termination: edge
  to:
    kind: Service
    name: matrix
    weight: 100
  wildcardPolicy: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: element
  namespace: matrix-chat
data:
  config.json: |
    {
        "default_server_config": {
            "m.homeserver": {
                "base_url": "https://matrix.apps.ocp4.example.com",
                "server_name": "matrix.apps.ocp4.example.com"
            },
            "m.identity_server": {
                "base_url": "https://vector.im"
            }
        },
        "disable_custom_urls": false,
        "disable_guests": false,
        "disable_login_language_selector": false,
        "disable_3pid_login": false,
        "brand": "Element",
        "integrations_ui_url": "https://scalar.vector.im/",
        "integrations_rest_url": "https://scalar.vector.im/api",
        "integrations_widgets_urls": [
                "https://scalar.vector.im/_matrix/integrations/v1",
                "https://scalar.vector.im/api",
                "https://scalar-staging.vector.im/_matrix/integrations/v1",
                "https://scalar-staging.vector.im/api",
                "https://scalar-staging.riot.im/scalar/api"
        ],
        "bug_report_endpoint_url": "https://element.io/bugreports/submit",
        "defaultCountryCode": "GB",
        "show_labs_settings": false,
        "features": { },
        "default_federate": true,
        "default_theme": "light",
        "room_directory": {
            "servers": [
                    "matrix.org"
            ]
        },
        "enable_presence_by_hs_url": {
            "https://matrix.org": false,
            "https://matrix-client.matrix.org": false
        },
        "setting_defaults": {
            "breadcrumbs": true
        },
        "jitsi": {
            "preferred_domain": "meet.element.io"
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: element
  namespace: matrix-chat
spec:
  selector:
    matchLabels:
      app: element
  replicas: 1
  template:
    metadata:
      labels:
        app: element
    spec:
      containers:
      - env:
        - name: ELEMENT_WEB_PORT
          value: "8080"
        image: docker.io/vectorim/element-web:v1.11.97
        name: element
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.json
          subPath: config.json
        ports:
        - containerPort: 8080
          name: element
          protocol: TCP
        readinessProbe:
            httpGet:
                path: /
                port: element
            initialDelaySeconds: 2
            periodSeconds: 3
        livenessProbe:
            httpGet:
                path: /
                port: element
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: element
---
apiVersion: v1
kind: Service
metadata:
  name: element
  namespace: matrix-chat
spec:
  selector:
    app: element
  ports:
    - name: default
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/instance: chat
    app.kubernetes.io/name: element
  name: element
  namespace: matrix-chat
spec:
  host: element.apps.ocp4.example.com
  tls:
    termination: edge
  to:
    kind: Service
    name: element
    weight: 100
  wildcardPolicy: None
